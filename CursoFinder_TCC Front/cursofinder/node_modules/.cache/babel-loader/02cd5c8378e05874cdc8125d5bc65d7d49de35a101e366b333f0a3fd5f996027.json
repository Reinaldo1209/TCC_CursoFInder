{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reina\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\CursoFinder_TCC\\\\cursofinder\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [erro, setErro] = useState(\"\"); // Estado para exibir mensagens de erro\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(\"https://localhost:7238/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password: senha\n        }) // Certifique-se de que o backend espera \"password\"\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json(); // Tenta converter a resposta em JSON\n        let errorMessage = \"Erro ao fazer login.\";\n        if (errorResponse.errors) {\n          if (errorResponse.errors.Password) {\n            errorMessage = \"A senha deve conter pelo menos 8 caracteres, incluindo letras maiúsculas, minúsculas e números.\";\n          } else if (errorResponse.errors.Email) {\n            errorMessage = \"Formato de e-mail inválido.\";\n          } else if (errorResponse.errors.UserName) {\n            errorMessage = \"Nome de usuário inválido. Use apenas letras e números.\";\n          }\n        } else if (errorResponse.message) {\n          errorMessage = errorResponse.message;\n        }\n        throw new Error(errorMessage);\n      }\n      const data = await response.json();\n      localStorage.setItem(\"token\", data.token);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Erro ao fazer login:\", error.message);\n      setErro(error.message); // Atualiza a mensagem de erro no estado\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), erro && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: erro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Digite seu e-mail\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Digite sua senha\",\n        value: senha,\n        onChange: e => setSenha(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/recuperacao-senha\",\n          children: \"Esqueceu a senha?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/cadastro\",\n          children: \"Cadastrar-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"emWOpuqJ+t683g9z2cpyvm3ixOk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","senha","setSenha","erro","setErro","navigate","handleLogin","response","fetch","method","headers","body","JSON","stringify","password","ok","errorResponse","json","errorMessage","errors","Password","Email","UserName","message","Error","data","localStorage","setItem","token","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","e","target","href","onClick","_c","$RefreshReg$"],"sources":["C:/Users/reina/OneDrive/Área de Trabalho/CursoFinder_TCC/cursofinder/src/pages/Login.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [erro, setErro] = useState(\"\"); // Estado para exibir mensagens de erro\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(\"https://localhost:7238/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password: senha }), // Certifique-se de que o backend espera \"password\"\n      });\n\n      if (!response.ok) {\n        const errorResponse = await response.json(); // Tenta converter a resposta em JSON\n        let errorMessage = \"Erro ao fazer login.\";\n\n        if (errorResponse.errors) {\n          if (errorResponse.errors.Password) {\n            errorMessage = \"A senha deve conter pelo menos 8 caracteres, incluindo letras maiúsculas, minúsculas e números.\";\n          } else if (errorResponse.errors.Email) {\n            errorMessage = \"Formato de e-mail inválido.\";\n          } else if (errorResponse.errors.UserName) {\n            errorMessage = \"Nome de usuário inválido. Use apenas letras e números.\";\n          }\n        } else if (errorResponse.message) {\n          errorMessage = errorResponse.message;\n        }\n\n        throw new Error(errorMessage);\n      }\n\n      const data = await response.json();\n      localStorage.setItem(\"token\", data.token);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Erro ao fazer login:\", error.message);\n      setErro(error.message); // Atualiza a mensagem de erro no estado\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <h2>Login</h2>\n        {erro && <p style={{ color: \"red\" }}>{erro}</p>} {/* Exibe a mensagem de erro */}\n        <label>E-mail</label>\n        <input\n          type=\"email\"\n          placeholder=\"Digite seu e-mail\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <label>Senha</label>\n        <input\n          type=\"password\"\n          placeholder=\"Digite sua senha\"\n          value={senha}\n          onChange={(e) => setSenha(e.target.value)}\n        />\n        <div className=\"links\">\n          <a href=\"/recuperacao-senha\">Esqueceu a senha?</a>\n          <a href=\"/cadastro\">Cadastrar-se</a>\n        </div>\n        <button onClick={handleLogin}>Login</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}