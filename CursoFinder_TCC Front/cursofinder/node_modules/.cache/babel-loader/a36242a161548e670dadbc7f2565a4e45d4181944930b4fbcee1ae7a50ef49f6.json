{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reina\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\CursoFinder_TCC\\\\cursofinder\\\\src\\\\pages\\\\Cadastro.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cadastro() {\n  _s();\n  const [nome, setNome] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [erro, setErro] = useState(\"\"); // Estado para exibir mensagens de erro\n  const navigate = useNavigate();\n  const handleCadastro = async () => {\n    if (!nome || !email || !senha) {\n      setErro(\"Todos os campos são obrigatórios.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"https://localhost:7238/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userName: nome,\n          email: email,\n          password: senha\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        let errorMessage = \"Erro ao cadastrar usuário.\";\n        if (data.errors) {\n          if (data.errors.Password) {\n            errorMessage = \"A senha deve ter pelo menos 8 caracteres, incluindo letras maiúsculas, minúsculas e números.\";\n          } else if (data.errors.Email) {\n            errorMessage = \"Formato de e-mail inválido.\";\n          } else if (data.errors.UserName) {\n            errorMessage = \"Nome de usuário inválido. Use apenas letras e números.\";\n          }\n        } else if (data.message) {\n          errorMessage = data.message;\n        }\n        throw new Error(errorMessage);\n      }\n      localStorage.setItem(\"token\", data.token);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Erro ao cadastrar:\", error);\n      setErro(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), erro && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: erro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Digite seu nome\",\n        value: nome,\n        onChange: e => setNome(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Digite seu e-mail\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Crie uma senha\",\n        value: senha,\n        onChange: e => setSenha(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCadastro,\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"J\\xE1 tem uma conta? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Fa\\xE7a login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Cadastro, \"1vmSO+xFet421EDtyPUsbLwAzaM=\", false, function () {\n  return [useNavigate];\n});\n_c = Cadastro;\nvar _c;\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"names":["useState","useNavigate","Link","jsxDEV","_jsxDEV","Cadastro","_s","nome","setNome","email","setEmail","senha","setSenha","erro","setErro","navigate","handleCadastro","response","fetch","method","headers","body","JSON","stringify","userName","password","data","json","ok","errorMessage","errors","Password","Email","UserName","message","Error","localStorage","setItem","token","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","e","target","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/reina/OneDrive/Área de Trabalho/CursoFinder_TCC/cursofinder/src/pages/Cadastro.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Cadastro() {\n  const [nome, setNome] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [erro, setErro] = useState(\"\"); // Estado para exibir mensagens de erro\n  const navigate = useNavigate();\n\n  const handleCadastro = async () => {\n    if (!nome || !email || !senha) {\n      setErro(\"Todos os campos são obrigatórios.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"https://localhost:7238/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userName: nome,\n          email: email,\n          password: senha,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        let errorMessage = \"Erro ao cadastrar usuário.\";\n\n        if (data.errors) {\n          if (data.errors.Password) {\n            errorMessage = \"A senha deve ter pelo menos 8 caracteres, incluindo letras maiúsculas, minúsculas e números.\";\n          } else if (data.errors.Email) {\n            errorMessage = \"Formato de e-mail inválido.\";\n          } else if (data.errors.UserName) {\n            errorMessage = \"Nome de usuário inválido. Use apenas letras e números.\";\n          }\n        } else if (data.message) {\n          errorMessage = data.message;\n        }\n\n        throw new Error(errorMessage);\n      }\n\n      localStorage.setItem(\"token\", data.token);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Erro ao cadastrar:\", error);\n      setErro(error.message);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <h2>Cadastrar</h2>\n        {erro && <p style={{ color: \"red\" }}>{erro}</p>} {/* Exibe mensagem de erro */}\n        <label>Nome</label>\n        <input\n          type=\"text\"\n          placeholder=\"Digite seu nome\"\n          value={nome}\n          onChange={(e) => setNome(e.target.value)}\n        />\n        <label>E-mail</label>\n        <input\n          type=\"email\"\n          placeholder=\"Digite seu e-mail\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <label>Senha</label>\n        <input\n          type=\"password\"\n          placeholder=\"Crie uma senha\"\n          value={senha}\n          onChange={(e) => setSenha(e.target.value)}\n        />\n        <button onClick={handleCadastro}>Cadastrar</button>\n        <p>Já tem uma conta? <Link to=\"/\">Faça login</Link></p>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}